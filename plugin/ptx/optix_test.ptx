//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-29069683
// Cuda compilation tools, release 11.1, V11.1.74
// Based on LLVM 3.4svn
//

.version 7.1
.target sm_52
.address_size 64

	// .globl	__raygen__rg
.const .align 8 .b8 resources[32];

.visible .entry __raygen__rg(

)
{
	.local .align 8 .b8 	__local_depot0[584];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<9>;
	.reg .f32 	%f<76>;
	.reg .b32 	%r<29>;
	.reg .b64 	%rd<17>;


	mov.u64 	%SPL, __local_depot0;
	cvta.local.u64 	%SP, %SPL;
	add.u64 	%rd6, %SP, 0;
	add.u64 	%rd1, %SPL, 0;
	// inline asm
	call (%r8), _optix_get_launch_index_x, ();
	// inline asm
	// inline asm
	call (%r9), _optix_get_launch_index_y, ();
	// inline asm
	ld.const.u64 	%rd7, [resources];
	cvta.to.global.u64 	%rd8, %rd7;
	cvt.rn.f32.u32	%f13, %r8;
	ld.global.u32 	%r20, [%rd8];
	cvt.rn.f32.u32	%f14, %r20;
	div.rn.f32 	%f15, %f13, %f14;
	fma.rn.f32 	%f16, %f15, 0f40000000, 0fBF800000;
	cvt.rn.f32.u32	%f17, %r9;
	ld.global.u32 	%r21, [%rd8+4];
	cvt.rn.f32.u32	%f18, %r21;
	div.rn.f32 	%f19, %f17, %f18;
	fma.rn.f32 	%f20, %f19, 0f40000000, 0fBF800000;
	ld.global.f32 	%f21, [%rd8+200];
	ld.global.f32 	%f22, [%rd8+204];
	mul.f32 	%f23, %f22, %f20;
	fma.rn.f32 	%f24, %f16, %f21, %f23;
	ld.global.f32 	%f25, [%rd8+208];
	sub.f32 	%f26, %f24, %f25;
	ld.global.f32 	%f27, [%rd8+212];
	add.f32 	%f28, %f27, %f26;
	ld.global.f32 	%f29, [%rd8+216];
	ld.global.f32 	%f30, [%rd8+220];
	mul.f32 	%f31, %f20, %f30;
	fma.rn.f32 	%f32, %f16, %f29, %f31;
	ld.global.f32 	%f33, [%rd8+224];
	sub.f32 	%f34, %f32, %f33;
	ld.global.f32 	%f35, [%rd8+228];
	add.f32 	%f36, %f35, %f34;
	ld.global.f32 	%f37, [%rd8+232];
	ld.global.f32 	%f38, [%rd8+236];
	mul.f32 	%f39, %f20, %f38;
	fma.rn.f32 	%f40, %f16, %f37, %f39;
	ld.global.f32 	%f41, [%rd8+240];
	sub.f32 	%f42, %f40, %f41;
	ld.global.f32 	%f43, [%rd8+244];
	add.f32 	%f44, %f43, %f42;
	ld.global.f32 	%f45, [%rd8+72];
	ld.global.f32 	%f46, [%rd8+76];
	mul.f32 	%f47, %f46, 0f00000000;
	fma.rn.f32 	%f48, %f45, 0f00000000, %f47;
	ld.global.f32 	%f49, [%rd8+80];
	fma.rn.f32 	%f50, %f49, 0f00000000, %f48;
	ld.global.f32 	%f51, [%rd8+84];
	add.f32 	%f4, %f51, %f50;
	ld.global.f32 	%f52, [%rd8+88];
	ld.global.f32 	%f53, [%rd8+92];
	mul.f32 	%f54, %f53, 0f00000000;
	fma.rn.f32 	%f55, %f52, 0f00000000, %f54;
	ld.global.f32 	%f56, [%rd8+96];
	fma.rn.f32 	%f57, %f56, 0f00000000, %f55;
	ld.global.f32 	%f58, [%rd8+100];
	add.f32 	%f5, %f58, %f57;
	ld.global.f32 	%f59, [%rd8+104];
	ld.global.f32 	%f60, [%rd8+108];
	mul.f32 	%f61, %f60, 0f00000000;
	fma.rn.f32 	%f62, %f59, 0f00000000, %f61;
	ld.global.f32 	%f63, [%rd8+112];
	fma.rn.f32 	%f64, %f63, 0f00000000, %f62;
	ld.global.f32 	%f65, [%rd8+116];
	add.f32 	%f6, %f65, %f64;
	mul.f32 	%f66, %f36, %f46;
	fma.rn.f32 	%f67, %f28, %f45, %f66;
	fma.rn.f32 	%f7, %f44, %f49, %f67;
	mul.f32 	%f68, %f36, %f53;
	fma.rn.f32 	%f69, %f28, %f52, %f68;
	fma.rn.f32 	%f8, %f44, %f56, %f69;
	mul.f32 	%f70, %f36, %f60;
	fma.rn.f32 	%f71, %f28, %f59, %f70;
	fma.rn.f32 	%f9, %f44, %f63, %f71;
	ld.const.u64 	%rd9, [resources+8];
	mov.u32 	%r28, 0;
	st.local.u32 	[%rd1], %r28;
	st.local.u32 	[%rd1+20], %r28;
	mov.f32 	%f12, 0f00000000;
	st.local.v2.f32 	[%rd1+24], {%f12, %f12};
	st.local.v2.f32 	[%rd1+32], {%f12, %f12};
	st.local.u32 	[%rd1+40], %r28;
	st.local.u32 	[%rd1+52], %r28;
	st.local.v2.f32 	[%rd1+56], {%f12, %f12};
	st.local.v2.f32 	[%rd1+64], {%f12, %f12};
	st.local.u32 	[%rd1+72], %r28;
	st.local.u32 	[%rd1+92], %r28;
	st.local.v2.f32 	[%rd1+96], {%f12, %f12};
	st.local.v2.f32 	[%rd1+104], {%f12, %f12};
	st.local.u32 	[%rd1+112], %r28;
	st.local.u32 	[%rd1+124], %r28;
	st.local.v2.f32 	[%rd1+128], {%f12, %f12};
	st.local.v2.f32 	[%rd1+136], {%f12, %f12};
	st.local.u32 	[%rd1+144], %r28;
	st.local.u32 	[%rd1+164], %r28;
	st.local.v2.f32 	[%rd1+168], {%f12, %f12};
	st.local.v2.f32 	[%rd1+176], {%f12, %f12};
	st.local.u32 	[%rd1+184], %r28;
	st.local.u32 	[%rd1+196], %r28;
	st.local.v2.f32 	[%rd1+200], {%f12, %f12};
	st.local.v2.f32 	[%rd1+208], {%f12, %f12};
	st.local.u32 	[%rd1+216], %r28;
	st.local.u32 	[%rd1+236], %r28;
	st.local.v2.f32 	[%rd1+240], {%f12, %f12};
	st.local.v2.f32 	[%rd1+248], {%f12, %f12};
	st.local.u32 	[%rd1+256], %r28;
	st.local.u32 	[%rd1+268], %r28;
	st.local.v2.f32 	[%rd1+272], {%f12, %f12};
	st.local.v2.f32 	[%rd1+280], {%f12, %f12};
	st.local.u32 	[%rd1+288], %r28;
	st.local.u32 	[%rd1+308], %r28;
	st.local.v2.f32 	[%rd1+312], {%f12, %f12};
	st.local.v2.f32 	[%rd1+320], {%f12, %f12};
	st.local.u32 	[%rd1+328], %r28;
	st.local.u32 	[%rd1+340], %r28;
	st.local.v2.f32 	[%rd1+344], {%f12, %f12};
	st.local.v2.f32 	[%rd1+352], {%f12, %f12};
	st.local.u32 	[%rd1+360], %r28;
	st.local.u32 	[%rd1+380], %r28;
	st.local.u32 	[%rd1+384], %r28;
	st.local.u32 	[%rd1+388], %r28;
	st.local.v2.f32 	[%rd1+392], {%f12, %f12};
	st.local.u32 	[%rd1+400], %r28;
	st.local.u32 	[%rd1+412], %r28;
	st.local.v2.f32 	[%rd1+416], {%f12, %f12};
	st.local.v2.f32 	[%rd1+424], {%f12, %f12};
	st.local.u32 	[%rd1+432], %r28;
	st.local.u32 	[%rd1+452], %r28;
	st.local.v2.f32 	[%rd1+456], {%f12, %f12};
	st.local.v2.f32 	[%rd1+464], {%f12, %f12};
	st.local.u32 	[%rd1+472], %r28;
	st.local.u32 	[%rd1+484], %r28;
	st.local.v2.f32 	[%rd1+488], {%f12, %f12};
	st.local.v2.f32 	[%rd1+496], {%f12, %f12};
	st.local.u32 	[%rd1+504], %r28;
	st.local.u32 	[%rd1+524], %r28;
	st.local.v2.f32 	[%rd1+528], {%f12, %f12};
	st.local.v2.f32 	[%rd1+536], {%f12, %f12};
	st.local.u32 	[%rd1+544], %r28;
	st.local.u32 	[%rd1+556], %r28;
	st.local.v2.f32 	[%rd1+560], {%f12, %f12};
	st.local.v2.f32 	[%rd1+568], {%f12, %f12};
	st.local.u32 	[%rd1+576], %r28;
	cvta.to.global.u64 	%rd10, %rd9;
	shr.u64 	%rd11, %rd6, 32;
	cvt.u32.u64	%r18, %rd11;
	cvt.u32.u64	%r19, %rd6;
	ld.global.u64 	%rd5, [%rd10+24];
	mov.u32 	%r13, 255;
	mov.u32 	%r16, 1;
	mov.f32 	%f11, 0f5A0E1BCA;
	// inline asm
	call (%r11, %r12), _optix_trace_2, (%rd5, %f4, %f5, %f6, %f7, %f8, %f9, %f12, %f11, %f12, %r13, %r28, %r28, %r16, %r28, %r18, %r19);
	// inline asm
	ld.local.u32 	%r22, [%rd1];
	setp.eq.s32	%p1, %r22, 0;
	@%p1 bra 	BB0_10;

	add.s64 	%rd2, %rd1, 52;
	add.s64 	%rd3, %rd1, 56;
	ld.const.u64 	%rd12, [resources+16];
	cvta.to.global.u64 	%rd13, %rd12;
	add.s64 	%rd4, %rd13, 40;
	ld.global.u32 	%r27, [%rd13+40];
	setp.eq.s32	%p2, %r27, 0;
	@%p2 bra 	BB0_10;

	ld.local.f32 	%f1, [%rd2];
	ld.local.f32 	%f2, [%rd3];

BB0_3:
	setp.gt.s32	%p3, %r28, 1;
	@%p3 bra 	BB0_6;

	setp.eq.s32	%p6, %r28, 0;
	mov.f32 	%f75, %f1;
	@%p6 bra 	BB0_9;

	setp.eq.s32	%p7, %r28, 1;
	mov.f32 	%f75, %f2;
	@%p7 bra 	BB0_9;
	bra.uni 	BB0_8;

BB0_6:
	setp.eq.s32	%p4, %r28, 2;
	@%p4 bra 	BB0_11;
	bra.uni 	BB0_7;

BB0_11:
	mov.f32 	%f75, %f12;
	bra.uni 	BB0_9;

BB0_7:
	setp.ne.s32	%p5, %r28, 3;

BB0_8:
	mov.f32 	%f75, 0f3F800000;

BB0_9:
	ld.global.u32 	%r24, [%rd4+-8];
	mad.lo.s32 	%r25, %r9, %r24, %r8;
	mad.lo.s32 	%r26, %r27, %r25, %r28;
	ld.global.u64 	%rd14, [%rd4+8];
	mul.wide.u32 	%rd15, %r26, 4;
	add.s64 	%rd16, %rd14, %rd15;
	st.f32 	[%rd16], %f75;
	ld.global.u32 	%r27, [%rd4];
	add.s32 	%r28, %r28, 1;
	setp.lt.u32	%p8, %r28, %r27;
	@%p8 bra 	BB0_3;

BB0_10:
	ret;
}

	// .globl	__miss__ms
.visible .entry __miss__ms(

)
{



	ret;
}

	// .globl	__closesthit__ch
.visible .entry __closesthit__ch(

)
{
	.reg .f32 	%f<3>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<6>;


	// inline asm
	call (%r1), _optix_get_payload_0, ();
	// inline asm
	// inline asm
	call (%r2), _optix_get_payload_1, ();
	// inline asm
	cvt.u64.u32	%rd1, %r1;
	cvt.u64.u32	%rd2, %r2;
	bfi.b64 	%rd3, %rd1, %rd2, 32, 32;
	ld.u32 	%r3, [%rd3];
	add.s32 	%r4, %r3, 1;
	st.u32 	[%rd3], %r4;
	// inline asm
	call (%f1, %f2), _optix_get_triangle_barycentrics, ();
	// inline asm
	mul.wide.u32 	%rd4, %r3, 72;
	add.s64 	%rd5, %rd3, %rd4;
	st.f32 	[%rd5+52], %f1;
	st.f32 	[%rd5+56], %f2;
	mov.u32 	%r5, 0;
	st.u32 	[%rd5+60], %r5;
	ret;
}


